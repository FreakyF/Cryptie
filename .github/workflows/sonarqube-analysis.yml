name: SonarQube Analysis

on:
  workflow_call:
    secrets:
      sonar_token:
        required: true

jobs:
  analyze:
    name: Analyze with SonarQube
    runs-on: windows-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: Install ReportGenerator
        run: dotnet tool install --global dotnet-reportgenerator-globaltool

      - name: Restore dependencies
        run: dotnet restore

      - name: Run tests with coverage
        run: |
          $ErrorActionPreference = 'Stop'
          $testProjects = Get-ChildItem -Recurse -Filter *.csproj | Where-Object { $_.FullName -match 'Tests' }
          foreach ($proj in $testProjects) {
            dotnet test $proj.FullName --no-restore --collect:"XPlat Code Coverage" --results-directory ./TestResults --logger trx
          }

      - name: Merge coverage reports
        run: |
          $coverageFiles = Get-ChildItem -Recurse -Filter 'coverage.cobertura.xml' | ForEach-Object { $_.FullName } | Select-Object -Unique
          $coverageFilesString = $coverageFiles -join ';'
          reportgenerator -reports:$coverageFilesString -targetdir:CoverageReport -reporttypes:Html

      - name: Upload coverage report artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: CoverageReport

      - name: Cache SonarQube Cloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarQube Cloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: ./.sonar/scanner
          key: ${{ runner.os }}-sonar-scanner-${{ hashFiles('**/sonar-project.properties') }}
          restore-keys: ${{ runner.os }}-sonar-scanner-

      - name: Install SonarQube Cloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: pwsh
        run: |
          mkdir .sonar\scanner -Force
          dotnet tool update dotnet-sonarscanner --tool-path .sonar\scanner

      - name: Begin SonarCloud analysis
        env:
          SONAR_TOKEN: ${{ secrets.sonar_token }}
        run: |
          .sonar\scanner\dotnet-sonarscanner begin /k:"FreakyF_Cryptie" /o:"freakyf" /d:sonar.login=${{ secrets.sonar_token }} /d:sonar.cs.opencover.reportsPaths=**/coverage.cobertura.xml

      - name: End SonarCloud analysis
        env:
          SONAR_TOKEN: ${{ secrets.sonar_token }}
        run: |
          .sonar\scanner\dotnet-sonarscanner end /d:sonar.login=${{ secrets.sonar_token }}
