name: SonarQube Analysis

on:
  workflow_call:
    secrets:
      SONAR_TOKEN:
        required: true

jobs:
  analyze:
    name: Analyze with SonarCloud
    runs-on: ubuntu-latest

    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'zulu'

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: ./.sonar/scanner
          key: ${{ runner.os }}-sonar-scanner-${{ hashFiles('**/sonar-project.properties') }}
          restore-keys: ${{ runner.os }}-sonar-scanner-

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: |
          mkdir -p ./.sonar/scanner
          dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner

      - name: Begin SonarCloud analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./.sonar/scanner/dotnet-sonarscanner begin \
            /k:"FreakyF_Cryptie" \
            /o:"freakyf" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.cs.opencover.reportsPaths="TestResults/coverage.opencover.xml" \
            /d:sonar.verbose=true

      - name: Build project
        run: dotnet build src/Cryptie.sln --no-incremental

      - name: Run tests with coverage
        continue-on-error: true
        run: |
          dotnet test src/Cryptie.sln \
            --no-build \
            -r linux-x64 \
            /p:CollectCoverage=true \
            /p:CoverletOutput=TestResults/coverage.opencover.xml \
            /p:CoverletOutputFormat=opencover

      - name: End SonarCloud analysis
        if: always()
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./.sonar/scanner/dotnet-sonarscanner end \
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
